version: '3'
services:
    postgres:
        image: 'postgres:latest'
        environment:
            - POSTGRES_PASSWORD=postgres_password
    redis:
        image: 'redis:latest'
    nginx:
        build:
            dockerfile: Dockerfile.dev #Name of the file,not a path
            context: ./nginx
        restart: always
        ports:
            - '3050:80'
    api:
        build:
            dockerfile: Dockerfile.dev #Name of the file,not a path
            context: ./server
        volumes:
            - /app/node_modules # leave that folder as is
            - ./server:/app #redirects app to the content of our server, avoiding rebuild
        environment: # Adds an array of env vars
            - REDIS_HOST=redis # Puts name of service and docker-compose will handle it
            - REDIS_PORT=6379 # default value  from docker-hub
            - PGHOST=postgres
            - PGUSER=postgres
            - PGDATABASE=postgres
            - PGPASSWORD=postgres_password
            - PGPORT=5432
        depends_on:
            - postgres
    client:
        build:
            dockerfile: Dockerfile.dev #Name of the file,not a path
            context: ./client
        volumes:
            - /app/node_modules # leave that folder as is
            - ./client:/app #redirects app to the content of our client, avoiding rebuild
        stdin_open: true
    worker:
        build:
            dockerfile: Dockerfile.dev #Name of the file,not a path
            context: ./worker
        volumes:
            - /app/node_modules # leave that folder as is
            - ./worker:/app #redirects app to the content of our client, avoiding rebuild
        environment: # Adds an array of env vars
            - REDIS_HOST=redis # Puts name of service and docker-compose will handle it
            - REDIS_PORT=6379 # default value  from docker-hub

